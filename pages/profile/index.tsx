import type { NextPage, InferGetServerSidePropsType } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "./Profile.module.css";
import {
  StreamApp,
  StatusUpdateForm,
  FlatFeed,
  NotificationDropdown,
  Activity,
  ActivityFooter,
  LikeButton,
  CommentField,
  CommentList,
  CommentItem,
  InfiniteScrollPaginator,
} from "react-activity-feed";
// import Navbar from "./components/NavBar";
import "react-activity-feed/dist/index.css";
import prisma from "../../lib/prisma";
import { useStream } from "../../lib/hooks";
import { useEffect } from "react";
import JsonData from "/api/user-token";

require("dotenv");

interface Props {}

const apiKey = process.env.REACT_APP_STREAM_API_KEY as string;
const appId = process.env.REACT_APP_STREAM_APP_ID as string;




const Profile: NextPage = (data ) => {

  // const apiKey = process.env.REACT_APP_STREAM_API_KEY as string;
  // const appId = process.env.REACT_APP_STREAM_APP_ID as string;
  // const token =
  //   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoibmFubiJ9.Htkbm-hff3zenFC3Q2QAUrGXhnqC9dQSDkcL0-MnXH4";

  // console.log('appId here', appId, token, apiKey)

  //demo
  //   const apiKey = 'sesb46h7zb6p';
  // const appId = '66001';
  // const token =
  //   'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYmF0bWFuIn0.8aYd7O_fx-1YMx28DXG1n274o4pa3SjHnRM8AIHLqkE';

  // const streamToken = useStream();
  // console.log("token for suser", {  token: streamToken?.data?.appToken });

  // console.log('token for user',{user: streamToken?.user?.appToken });

  const token =
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoic3VzaGkifQ.rxndOEUbt4qOdGEzjWBC65ZB0xwJKhMcgEos0R4UN9I";

  // const token = streamToken?.users?.appToken;

  return (
    <div className={styles.container}>
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h2>Your personal feed </h2>
        {/* <StreamApp apiKey={apiKey} appId={appId} token={token}>
          <div className="wrapper box">
            <h3>React Activity Feed</h3>
            <NotificationDropdown right />
          </div>
          <StatusUpdateForm
            emojiI18n={{
              search: "Type here to search...",
              categories: { recent: "Recent Emojis" },
            }}
          />
          <FlatFeed
            notify
            feedGroup="user"
            options={{
              limit: 6,
              withOwnChildren: true,
              withRecentReactions: true,
            }}
            Paginator={InfiniteScrollPaginator}
            Activity={({ activity, feedGroup, userId }) => (
              <Activity
                activity={activity}
                feedGroup={feedGroup}
                userId={userId}
                Footer={() => (
                  <>
                    <ActivityFooter
                      activity={activity}
                      feedGroup={feedGroup}
                      userId={userId}
                    />
                    <CommentField activity={activity} />
                    <CommentList
                      activityId={activity.id}
                      CommentItem={({ comment }) => (
                        <div className="wrapper">
                          <CommentItem comment={comment} />
                          <LikeButton reaction={comment} />
                        </div>
                      )}
                    />
                  </>
                )}
              />
            )}
          />
        </StreamApp> */}
      </main>
    </div>
  );
};

export default Profile;
